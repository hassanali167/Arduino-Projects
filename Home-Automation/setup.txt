Arduino Setup for LED and Socket Control

Purpose:
This program allows controlling the state of multiple LEDs and a socket via serial commands. The LEDs and socket are connected to specific pins on the Arduino board, and their state can be toggled based on the input received from the serial monitor.

Hardware Connections:
1. **LED 1 (led1)** is connected to digital pin 3.
2. **LED 2 (led2)** is connected to digital pin 4.
3. **LED 3 (led3)** is connected to digital pin 5.
4. **Socket** is connected to digital pin 6.
5. **Built-in LED (pin 13)** is used for visual feedback and is controlled along with the LEDs.

Serial Commands:
1. **'1'** - Turns ON pin 13 (built-in LED) and **LED 1** (pin 3).
2. **'2'** - Turns OFF pin 13 and **LED 1**.
3. **'3'** - Turns ON pin 13 and **LED 2** (pin 4).
4. **'4'** - Turns OFF pin 13 and **LED 2**.
5. **'5'** - Turns ON pin 13 and **LED 3** (pin 5).
6. **'6'** - Turns OFF pin 13 and **LED 3**.
7. **'7'** - Turns ON pin 13 and **Socket** (pin 6).
8. **'8'** - Turns OFF pin 13 and **Socket**.
9. **Any other input** - Turns OFF all components (pin 13, LEDs, and socket).

Components:
- Arduino board (e.g., Uno, Nano, etc.)
- 3 LEDs with appropriate current-limiting resistors (connected to pins 3, 4, 5)
- Socket (connected to pin 6)
- Serial Monitor for communication

Instructions:
1. Connect the Arduino to your computer using the USB cable.
2. Open the Arduino IDE and load the provided sketch onto your Arduino board.
3. Open the Serial Monitor (set to 9600 baud rate).
4. Send any of the commands ('1' to '8') to control the LEDs and socket as per the functionality described above.

Notes:
- Ensure the appropriate hardware is connected to the respective pins as per the hardware connections section.
- The built-in LED (pin 13) is used as a visual feedback to indicate activity.

